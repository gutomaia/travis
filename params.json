{"name":"travis","body":"## Install:\r\n\r\n    pip install travis\r\n\r\n## Usage:\r\n\r\n    import travis\r\n    repo = travis.show('travis-ci', 'travis-ci')\r\n    print repo.last.stable\r\n\r\n\r\n## Documentation:\r\n\r\n### **repositories ()**\r\n\r\nList of the latest Repo()s being tested\r\n\r\n\r\n### **show (owner, repo, build=None)**\r\n\r\nReturns a Repo()\r\n\r\nIf a build number is provided then a Build() object is returned instead\r\n\r\n\r\n### **builds (owner, repo)**\r\n\r\nReturns a list of Build()s for a given repo\r\n\r\n\r\n### **get_builds ()**\r\n\r\n*meant for internal use*\r\n\r\nWorks like **builds()** but takes the slug has a parameter\r\n\r\n\r\n### **Repo (dict())**\r\n\r\n* description\r\n* id\r\n* last_build_duration\r\n* last_build_finished_at\r\n* last_build_id\r\n* last_build_language\r\n* last_build_number\r\n* last_build_result\r\n* last_build_started_at\r\n* last_build_status\r\n* public_key\r\n* slug\r\n* builds\r\n* last - *last Build() of the builds list*\r\n* stable - *Build().passed value of the last Build() in builds*\r\n\r\n\r\n### **Build (dict())**\r\n\r\n* branch\r\n* commit\r\n* duration\r\n* event_type\r\n* finished_at\r\n* id\r\n* message\r\n* number\r\n* repository_id\r\n* result\r\n* started_at\r\n* state\r\n* passed - a boolean inverse of the result in value\r\n\r\n\r\n### **Cute (dict())**\r\n\r\n*meant for internal use*\r\n\r\nBoth Repo() and Build() are based on this class\r\n\r\nIt receives a dict and makes all the keys available as attributes\r\n\r\n\r\n## Bugs & Co.\r\n\r\nIf you find bugs or new features that are not implemented you can:\r\n\r\n * [Fork and implement the changes](https://github.com/medecau/travis/fork)\r\n * [Fork and write a test that fails but shouldn't](https://github.com/medecau/travis/fork)\r\n * [Submit an issue in github](https://github.com/medecau/travis/issues)\r\n\r\n\r\n## Aknowledgment\r\n\r\n[Kenneth Reitz](https://github.com/kennethreitz) for being awesome and showing how to do things right.\r\n","tagline":"Travis-CI service api wrapper for python","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}